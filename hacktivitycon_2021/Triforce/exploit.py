from pwn import *
from Crypto.Util.number import bytes_to_long, long_to_bytes

block = b'a'*32
dec_block = int(block, 16)
def find_flag(n, conn):
    conn.recvuntil(b"triforce# ")
    conn.sendline(str(n))
    conn.recvuntil(b"select# ")
    conn.sendline(b"2")
    conn.recvuntil("decrypt> ")
    conn.sendline(block*3)
    conn.recvuntil(b"SPOKEN: \n")
    cipher = conn.recvline().strip()
    dec_last_plain_block = int(cipher[-32:], 16)
    dec_first_plain_block = int(cipher[:32], 16)
    
    x = dec_last_plain_block ^ dec_block
    flag = x ^ dec_first_plain_block
    return long_to_bytes(flag)

conn = remote("challenge.ctf.games", 31084)
first_part = find_flag(1, conn)
conn = remote("challenge.ctf.games", 31084)
second_part = find_flag(2, conn)
conn = remote("challenge.ctf.games", 31084)
third_part = find_flag(3, conn)

print(first_part+second_part+third_part)
