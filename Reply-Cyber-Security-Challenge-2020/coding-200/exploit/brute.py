import sys
from PIL import Image

if len(sys.argv) < 3:
    print(f'{sys.argv[0]} file.png fil3.png')
    exit()


def makePassword(x, y, r1, g1, b1, r2, g2, b2):
    xy = str(x) + str(y)
    rgb1 = '{:0{}X}'.format(r1, 2) + '{:0{}X}'.format(g1, 2) + '{:0{}X}'.format(b1, 2)
    rgb2 = '{:0{}X}'.format(r2, 2) + '{:0{}X}'.format(g2, 2) + '{:0{}X}'.format(b2, 2)

    return xy + rgb1 + rgb2


img1 = Image.open(sys.argv[1])
img2 = Image.open(sys.argv[2])

width, heigth = img1.size


def findPassword(algorithm):
    passwords = []
    for x in range(width):
        for y in range(heigth):
            rgb1 = img1.getpixel((x, y))
            try:
                rgb2 = img2.getpixel(algorithm(x, y))
            except:
                return None

            if rgb1 != rgb2:
                password = makePassword(x, y, *rgb1, *rgb2)
                passwords.append(password)

        if len(passwords) > 1:
            return None

    return passwords[0]


transformations = []

normal = lambda x,y: (x,y)

# Rotate around x axis
rotateX = lambda x, y: (x, heigth - y - 1)
# Rotate around y axis
rotateY = lambda x, y: (width - x - 1, y)
# Rotate around x and y axis
rotateXY = lambda x,y: (width - x - 1, heigth - y - 1)

# Rotate clockwise 90째
rotateC90 = lambda x,y: (heigth - y - 1, x)
# Rotate counterclockwise 90째
rotateCC90 = lambda x,y: (y, width - x - 1)

# Rotate counterclockwise 90째 AND Mirror around X axis
rotateCC90MirrorY = lambda x,y: (heigth - y - 1, width - x - 1)
# Rotate counterclockwise 90째 AND Mirror around X axis
rotateCC90MirrorX = lambda x,y: (y, width - (width-x-1) - 1)

# Mirroring
if img1.size == img2.size:
    transformations += [
        normal,
        rotateX,
        rotateY,
        rotateXY,
    ]

# Rotating and more
if img1.size[0] == img2.size[1]:
    transformations += [
        rotateC90,
        rotateCC90,
        rotateCC90MirrorY,
        rotateCC90MirrorX
    ]

for l in transformations:
    pwd = findPassword(l)

    if pwd:
        print(pwd)
        exit(0)

exit(12)
