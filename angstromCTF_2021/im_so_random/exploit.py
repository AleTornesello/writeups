from pwn import *
from factordb.factordb import FactorDB
from itertools import product

DIGITS = 8


def get_seeds(seed):
    a = int(str(seed[0]**2).rjust(DIGITS*2, "0")[DIGITS//2:DIGITS + DIGITS//2])
    b = int(str(seed[1]**2).rjust(DIGITS*2, "0")[DIGITS//2:DIGITS + DIGITS//2])
    return [a, b]


r = remote("crypto.2021.chall.actf.co", 21600)

got_numbers = []
got_factors = []

# Get three random numbers and factorize them
for i in range(3):
    r.recvuntil("[g]? ", drop=True)
    r.sendline("r")

    n = int(r.recvline().strip())

    f = FactorDB(n)
    f.connect()
    assert f.get_status() == "FF", "Number not factored"
    f = f.get_factor_list()

    got_numbers.append(n)
    got_factors.append(f)

# Find all possible seed couples
possible_second_seeds = []

first_factors = got_factors[0]
for p in product([0, 1], repeat=len(first_factors)):
    first_seeds=[1, 1]

    for i in range(len(first_factors)):
        first_seeds[p[i]] *= first_factors[i]

    if len(str(first_seeds[0])) == 8 and len(str(first_seeds[0])) == 8:

        second_seeds=get_seeds(first_seeds)

        if second_seeds[0] * second_seeds[1] == got_numbers[1]:
            possible_second_seeds.append(second_seeds)

print(possible_second_seeds)

for s in possible_second_seeds:
    seeds = get_seeds(s)

    if seeds[0] * seeds[1] == got_numbers[2]:
        r.recvuntil("[g]? ", drop=True)
        r.sendline("g")

        for i in range(2):
            r.recvuntil("generated? ", drop=True)

            seeds=get_seeds(seeds)

            r.sendline(str(seeds[0] * seeds[1]))

        r.interactive()
