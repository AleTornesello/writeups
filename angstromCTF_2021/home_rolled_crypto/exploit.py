from pwn import *
from binascii import unhexlify

BLOCK_SIZE = 16

r = remote("crypto.2021.chall.actf.co", 21602)

rainbow_table = []

for payload in ["00", "FF"]:
    r.recvuntil("[2]? ", drop=True)
    r.sendline("1")
    r.recvuntil("encrypt: ", drop=True)
    r.sendline(payload * BLOCK_SIZE)
    response = r.recvline().decode().strip()

    n = int(response, 16)
    rainbow_table.append([int(digit)
                          for digit in bin(n)[2:].rjust(8*BLOCK_SIZE, "0")])

print(rainbow_table)

r.recvuntil("[2]? ", drop=True)
r.sendline("2")
for i in range(10):
    r.recvuntil("Encrypt this: ", drop=True)

    question = r.recvline().decode().strip()
    blocks = [question[i*BLOCK_SIZE*2:(i+1)*BLOCK_SIZE*2]
              for i in range(len(question)//(BLOCK_SIZE*2))]

    answer = ""
    for block in blocks:
        enc = int(block, 16)
        enc_bits = [int(digit)
                    for digit in bin(enc)[2:].rjust(8*BLOCK_SIZE, "0")]
        dec_bits = []

        for x in range(8*BLOCK_SIZE):
            dec_bits.append(rainbow_table[enc_bits[x]][x])

        out = 0
        for bit in dec_bits:
            out = (out << 1) | bit

        answer += str(hex(out)[2:])

    r.sendline(answer)
r.interactive()
