from pwn import *
import time
import string

r = remote('challs.dvc.tf', 3333)
BLOCK_SIZE = 32  # FIRST PART: 16


def send(string):
    r.recvuntil(b'encrypt? ', drop=True)
    r.sendline(string)
    line = r.recvline().strip().split()
    while line[0] != b'E(input':
        r.recvuntil(b'encrypt? ', drop=True)
        r.sendline(string)
        line = r.recvline().strip().split()

    return line[-1][32:64]  # FIRST PART: [:32]


def padding(length):
    return '0' * (length*2)


def find_character(flag):
    padding_length = BLOCK_SIZE - len(flag[0]) - 1
    p = padding(padding_length)
    prefix = p + flag[1]
    encrypted_flag = send(p)
    for c in string.printable:
        char_hex = "{:02x}".format(ord(c))
        encrypted_char = send(prefix + char_hex)
        if encrypted_flag == encrypted_char:
            return (str(c), char_hex)


flag = 'dvCTF{3CB_4ngry_'  # FIRST PART: ''
flag_hex = '64764354467b3343425f346e6772795f'  # FIRST PART: ''
for i in range(16):
    f = find_character((flag, flag_hex))
    flag += f[0]
    flag_hex += f[1]
    print(flag)
